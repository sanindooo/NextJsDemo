{"ast":null,"code":"// not about creating react components, we define server side functions\n// API routes only run on the server and will never be exposed to the client\n// URL - /api/new-meetup\n// lets us connect\nimport { MongoClient } from \"mongodb\"; // next function\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    const client = await MongoClient.connect(\"mongodb+srv://sanindo:hansa@cluster0.h26hfvf.mongodb.net/meetups?retryWrites=true&w=majority\"); // if db doesnt exist it's created on the fly\n\n    const db = client.db(); // collection - table, document - entry\n\n    const meetupsCollection = db.collection(\"meetups\"); // insert one new document into collection.\n    // accepts objects, where result will be object with automatically generated ID\n\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result); // close db once completed\n\n    client.close(); // return a status code with a json response\n\n    res.status(201).json({\n      message: \"Meetup inserted!\"\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/sanindo/Desktop/Files/courses/react/code/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;;AACA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAChC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AAC1B,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACpB,8FADoB,CAArB,CAH0B,CAO1B;;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAR0B,CAU1B;;AACA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAX0B,CAa1B;AACA;;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAjB0B,CAmB1B;;AACAL,IAAAA,MAAM,CAACS,KAAP,GApB0B,CAsB1B;;AACAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;AACD;;AAED,eAAelB,OAAf","sourcesContent":["// not about creating react components, we define server side functions\n// API routes only run on the server and will never be exposed to the client\n// URL - /api/new-meetup\n\n// lets us connect\nimport { MongoClient } from \"mongodb\";\n\n// next function\nasync function handler(req, res) {\n\tif (req.method === \"POST\") {\n\t\tconst data = req.body;\n\n\t\tconst client = await MongoClient.connect(\n\t\t\t\"mongodb+srv://sanindo:hansa@cluster0.h26hfvf.mongodb.net/meetups?retryWrites=true&w=majority\"\n\t\t);\n\n\t\t// if db doesnt exist it's created on the fly\n\t\tconst db = client.db();\n\n\t\t// collection - table, document - entry\n\t\tconst meetupsCollection = db.collection(\"meetups\");\n\n\t\t// insert one new document into collection.\n\t\t// accepts objects, where result will be object with automatically generated ID\n\t\tconst result = await meetupsCollection.insertOne(data);\n\n\t\tconsole.log(result);\n\n\t\t// close db once completed\n\t\tclient.close();\n\n\t\t// return a status code with a json response\n\t\tres.status(201).json({ message: \"Meetup inserted!\" });\n\t}\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}