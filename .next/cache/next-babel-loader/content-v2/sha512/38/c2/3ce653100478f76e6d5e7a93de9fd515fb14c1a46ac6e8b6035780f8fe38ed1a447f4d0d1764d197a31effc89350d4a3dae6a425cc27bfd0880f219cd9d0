{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sanindo/Desktop/Files/courses/react/code/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/800px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First meetup\",\n    address: \"Flat 5, 12345\",\n    description: \"First meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n} // getStaticPaths - needs to be exported in page component if it's a dynamic page and we're using getStaticProps.\n// helps make sure we only pregenerate pages for id's that exist. Entering in a path that doesn't exist throws an error\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/sanindo/Desktop/Files/courses/react/code/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACxB,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,uHADP;AAEC,IAAA,KAAK,EAAC,cAFP;AAGC,IAAA,OAAO,EAAC,eAHT;AAIC,IAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,C,CAED;AACA;;;KAZSA,a;;AA+DT,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n\treturn (\n\t\t<MeetupDetail\n\t\t\timage=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/800px-Stadtbild_M%C3%BCnchen.jpg\"\n\t\t\ttitle=\"First meetup\"\n\t\t\taddress=\"Flat 5, 12345\"\n\t\t\tdescription=\"First meetup description\"\n\t\t/>\n\t);\n}\n\n// getStaticPaths - needs to be exported in page component if it's a dynamic page and we're using getStaticProps.\n// helps make sure we only pregenerate pages for id's that exist. Entering in a path that doesn't exist throws an error\nexport async function getStaticPaths() {\n\treturn {\n\t\t// fallback - lets next if your paths contains all supported params of just some of them. \n\t\t// false - paths: contains all meetupId values. \n\t\t// true - next tries to create a new path dynamically based on the request. \n\t\tfallback: false,\n\t\t// paths object defines what paths should be pregenerated using the page ID param\n\t\tpaths: [\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tmeetupId: \"m1\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tmeetupId: \"m2\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tparams: {\n\t\t\t\t\tmeetupId: \"m3\",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n}\n\n// cant use react hooks in this function\nexport async function getStaticProps(context) {\n\t// context has params\n\t// grab ID for items in the square bracket folder\n\tconst meetupId = context.params.meetupId;\n\n\t// only shows in terminal since it doesn't run on the browser\n\t// console.log(meetupId);\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\timage:\n\t\t\t\t\t\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/800px-Stadtbild_M%C3%BCnchen.jpg\",\n\t\t\t\tid: meetupId,\n\t\t\t\ttitle: \"First meetup\",\n\t\t\t\taddress: \"Flat 5, 12345\",\n\t\t\t\tdescription: \"First meetup description\",\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}